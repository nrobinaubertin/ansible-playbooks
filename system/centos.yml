- hosts: "{{ host }}"
  remote_user: root
  vars:
    packages:
      - yum-cron
      - libselinux-python
      - epel-release
      - rsync
  tasks:
    - name: Set the hostname
      hostname:
        name: "{{ hostname.replace('*', (ansible_all_ipv4_addresses|hash('sha512'))[0:4]) }}"
    - name: Update system
      yum:
        name: '*'
        state: latest
    - name: Install packages
      yum:
        name: "{{ packages }}"
        state: latest
    - name: Set yum-cron
      lineinfile:
        dest: "/etc/yum/yum-cron.conf"
        regexp: "apply_updates = no"
        line: "apply_updates = yes"
        state: present
    - name: Enable yum-cron
      systemd:
        name: yum-cron
        enabled: yes
        state: started
    - name: Add swapfile
      shell: "[ -f /swapfile ] || (dd if=/dev/zero of=/swapfile bs=1M count=2048 && chmod 600 /swapfile && mkswap /swapfile && swapon /swapfile)"
    - name: Add swapfile to fstab
      lineinfile:
        dest: "/etc/fstab"
        line: "/swapfile none swap defaults 0 0"
        state: present
    - name: Enable persistent logging
      shell: "[ -d /var/log/journal ] || (mkdir /var/log/journal && systemd-tmpfiles --create --prefix /var/log/journal)"
    - name: Restart systemd-journald
      systemd:
        name: systemd-journald
        enabled: yes
        state: restarted
    - name: Add main user
      user:
        name: "{{ username }}"
        password_lock: yes
        state: present
    - name: Add main user to sudoers file
      lineinfile:
        dest: "/etc/sudoers"
        regexp: "{{ username }} ALL"
        line: "{{ username }} ALL=(ALL) NOPASSWD: ALL"
        state: present
    - name: Set new sshd_config file
      copy:
        src: "./sshd_config"
        dest: "/etc/ssh/sshd_config"
        owner: root
        group: root
        mode: 0655
    - name: Restrict rights of /etc/ssh
      file:
        mode: 0711
        path: /etc/ssh
    - name: Restrict rights of /etc
      file:
        mode: 0711
        path: /etc
    - name: Authorize ssh key
      authorized_key:
        user: "{{ username }}"
        state: present
        key: "{{ lookup('file', ssh_public_key) }}"
        path: "/etc/ssh/authorized_keys/{{ username }}"
    - name: restart sshd
      systemd:
        name: sshd
        enabled: yes
        state: restarted
    - name: Lock root
      user:
        name: root
        password_lock: yes
